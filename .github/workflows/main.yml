name: Flutter CI

# This workflow is triggered on pushes to the repository.

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
# on: push & pull request  # Default will running for every branch.

jobs:
  build:
    # This job will run on ubuntu virtual machine
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository and submodules
        uses: actions/checkout@v2
        with:
          submodules: recursive

      # Install Protoc
      - name: Install Protoc
        uses: arduino/setup-protoc@v1
        with:
          version: '3.x'

      # Setup the flutter environment.
      - uses: subosito/flutter-action@v1
        with:
          channel: "stable" # 'dev', 'alpha', default to: 'stable'
          # flutter-version: '1.12.x' # you can also specify exact version of flutter

      # Install protoc-gen-dart
      - run: flutter pub global activate protoc_plugin

      # Get flutter dependencies.
      - run: flutter pub get

      # Check for any formatting issues in the code.
      - run: flutter format --set-exit-if-changed .
      
      # Generate proto stub files
      - run: ./build_proto.sh

      # Copy the config file
      - run: cp config.example.json config.json

      # Statically analyze the Dart code for any errors.
      - run: flutter analyze .
